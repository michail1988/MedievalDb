delimiter //
CREATE TRIGGER insertUser
AFTER INSERT ON MED_USERS
FOR EACH ROW 
BEGIN

INSERT INTO MED_USERS_H (FK_USER, NAME, SURNAME, EMAIL, PASSWORD, REGISTERDATE, UNIVERSITY, PHONE, CONGRESSROLE, SUBJECTDESCRIPTION, CONTACTCOMMENTS, CONFIRMATION, PRIVILEGES, SUMMARY, ABSTRACT, PAPER_ACCEPTATION, PAYMENT, PAYMENT_ACCEPTED, ACADEMIC_TITLE, ACADEMIC_STATUS, MASTER, ENGINEER, FK_EDITOR, MODIFIED_DATE)
  VALUES(NEW.ID, NEW.NAME, NEW.SURNAME, NEW.EMAIL, NEW.PASSWORD, NEW.REGISTERDATE, NEW.UNIVERSITY, NEW.PHONE, NEW.CONGRESSROLE, NEW.SUBJECTDESCRIPTION, NEW.CONTACTCOMMENTS, NEW.CONFIRMATION, NEW.PRIVILEGES, NEW.SUMMARY, NEW.ABSTRACT, NEW.PAPER_ACCEPTATION, NEW.PAYMENT, NEW.PAYMENT_ACCEPTED, NEW.ACADEMIC_TITLE, NEW.ACADEMIC_STATUS, NEW.MASTER, NEW.ENGINEER, NEW.FK_EDITOR, NOW());

  IF (SELECT COUNT(*) FROM MED_UNIVERSITIES WHERE NAME=NEW.UNIVERSITY) = 0 THEN
            insert into MED_UNIVERSITIES (NAME) VALUES (NEW.UNIVERSITY);
        END IF;
END//
delimiter ;

delimiter //
CREATE TRIGGER updateUser
BEFORE UPDATE ON MED_USERS
FOR EACH ROW 
BEGIN

INSERT INTO MED_USERS_H (FK_USER, NAME, SURNAME, EMAIL, PASSWORD, REGISTERDATE, UNIVERSITY, PHONE, CONGRESSROLE, SUBJECTDESCRIPTION, CONTACTCOMMENTS, CONFIRMATION, PRIVILEGES, SUMMARY, ABSTRACT, PAPER_ACCEPTATION, PAYMENT, PAYMENT_ACCEPTED, ACADEMIC_TITLE, ACADEMIC_STATUS, MASTER, ENGINEER, FK_EDITOR, MODIFIED_DATE)
  VALUES(OLD.ID, NEW.NAME, NEW.SURNAME, NEW.EMAIL, NEW.PASSWORD, NEW.REGISTERDATE, NEW.UNIVERSITY, NEW.PHONE, NEW.CONGRESSROLE, NEW.SUBJECTDESCRIPTION, NEW.CONTACTCOMMENTS, NEW.CONFIRMATION, NEW.PRIVILEGES, NEW.SUMMARY, NEW.ABSTRACT, NEW.PAPER_ACCEPTATION, NEW.PAYMENT, NEW.PAYMENT_ACCEPTED, NEW.ACADEMIC_TITLE, NEW.ACADEMIC_STATUS, NEW.MASTER, NEW.ENGINEER, NEW.FK_EDITOR, NOW());

END//
delimiter ;
